Basic Object-Oriented Analysis and Design

One Problem Solving Process - "Top Down"
1 Write or draw about the problem
2 Extract key concepts from 1 and research them
3 Create a class hierarchy and object map for the concepts
4 Code the classes and and a test to run them
5 Repeat and refine

1 Write or draw about the problem
"Gorthons from Planet Percal #25"

Description of each scene in the game. 
Death - This is when the player died and should be something funny
Central Corridor - This is the starting point and has a Gorthon already 
	standing there that the player must defeat with a joke before 
	continuing. 
Laser Weapon Armory - This is where the hero gets a neutron bomb to blow
    up the ship before getting to the escape pod. It has a keypad the 
	hero has to guess the number for. 
The Bridge - This is another battle scene with a Gorthon where the hero 
	places the bomb
Escape Pod - This is where the hero escapes but only after guessing the
	right escape sequence
	
2 Extract Key Concepts and Research Them

List of Nouns
Alien
Player
Shop
Maze
Room
Scene
Gorthon
Escape Pod
Planet
Map
Engine
Death
Central Corridor
Laser Weapon Armory
The Bridge

Make List of Verbs
Skipping for now.

Research different things about the nouns and verbs above. 
Ex. About ships, or how bombs work, or storing game state in datebase.
Possibly at this point, after research redo two steps above

3 Create a class hierarchy and object map for the concepts
"What is similar to other things?"
"What is basically just another word for another thing?"

*Map
	-next_scene
	-opening_scene
*Engine
	-play 
*Scene
	-enter
	*Death
	*Central Corridor
	*Laser Weapon Armory
	*The Bridge
	*Escape Pod
	
	
Top Down vs Bottom Up

"Bottom Up" Steps
1 Take a small piece of the problem; hack on some code and get it to 
	barely run.
2 Refine the code into something more formal with classes and automated 
	tests.
3 Extract the key concepts you are using and research them. 
4 Write a description of what is really going on. 
5 Go back and refine the code, possibly throwing it out and starting 
	over. 
6 Repeat, moving on to some other piece of the problem. 
