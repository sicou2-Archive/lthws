0 The Setup
Nothing to Review, Python is Running
Maybe look in to gettin Python to Run on Treebow

1 A Good First Program
print()
$ python programName.py

2 Comments and Pound Characters
# to comment or disable lines of code
Debug trick read lines of code backwards (bottom up)


3 Numbers and Math
+, -, /, * (Modulus), %, <, >, <=, >= 
Normal Order of Operations

4 Variables and Names
variable_names with _ (underscore)
variable assigned with = 
can do things after = like math
print("There are ", variable, " here sep by ','.") 
4 = integer
3.0 = floating point number

5 More Variables and Printing
String with ' or " quotes
print(f"strings {variable} without needing loony cat")
variable = adding + or - sub * things_together
variables starting with numbers is no go in Python
round() is an option when working with floating points
6 Strings and Text
Strings are text you want to display or export out of the program
f"strings" can also be done with .format() suntax
	ex: variable.format(thing_to change_in_{}_of_variable)
		Not super strong with this

7 More Printing
print(can + concatinate + strings + of + variables + together + to 
      + print)
print('thing print', end=' ') can change the behavior of print from \n
    at the end of the line to a ' ' or whatever you please, there is 
	also (?) a sep= command I think? Maybe?
	

8 Printing, Printing
This ex hits .format() pretty well
formatter = '{} {} {} {}'
print(formatter.format(1, 2, 3, 4)

###### STOPPED HERE

9 Printing, Printing, Printing


10 What Was That?


11 Asking Questions


12 Prompting People


13 Parameters, Unpacking, Variables


14 Prompting and Passing


15 Reading Files


16 Reading and Writing Files


17 More Files


18 Names, Variables, Code, Functions


19 Functions and Variables


20 Functions and Files


21 Functions Can Return Something


22 What Do you Know So Far?


23 Strings, Bytes, and Character Encodings


24 More Practice


25 Even More Practice


26 Congratulations, Take a Test!


27 Memorizing Logic


28 Boolean Practice


29 What If


30 Else and If


31 Making Decisions


32 Loops and Lists


33 While Loops


34 Accessing Elements of Lists


35 Branches and Functions


36 Designing and Debugging


37 Symbol Review


38 Doing Things to Lists


39 Dictionaries, Oh Lovely Dictionaries


40 Modules, Classes, and Objects


41 Learning to Speak Object-Oriented
NEED TO GO THROUGH AND PRACTICE oop_test.py

42 Is-A, Has-A, Objects, and Classes
NEED TO GO THROUGH AN PRACTICE ex42.py exercise

43 Basic Object-Oriented Analysis and Designing










####STOP ON PAGE 180####